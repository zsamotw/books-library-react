{"version":3,"sources":["components/NavBar/index.ts","components/NavBar/NavBar.tsx","components/shared/Navigation.tsx","components/Store/store.context.ts","components/Store/action.types.ts","components/Store/reducers.ts","components/Store/initial-state.ts","components/Store/Store.tsx","components/Store/index.ts","http-service/base-url.ts","http-service/check-error.ts","http-service/httpDelete.ts","components/Store/action.creators.ts","components/Books/BookDelete.tsx","components/Books/BookDetails.tsx","http-service/httpGet.tsx","hooks/useAuthors.ts","hooks/usePublishers.ts","hooks/useBooks.ts","components/Books/BooksList.tsx","components/Books/index.ts","components/Books/Books.tsx","http-service/httpPut.ts","components/Authors/AuthorUpdate.tsx","components/Authors/AuthorDelete.tsx","components/Authors/AuthorDetails.tsx","components/Authors/AuthorsList.tsx","http-service/httpPost.ts","components/Authors/AuthorCreate.tsx","components/Authors/Authors.tsx","components/Publishers/PublishersCreate.tsx","components/Publishers/PublishersDelete.tsx","components/Publishers/PublishersUpdate.tsx","components/Publishers/PublishersDetails.tsx","components/Publishers/PublishersList.tsx","components/Publishers/Publishers.tsx","components/Books/BookForm.tsx","components/Books/BookCreate.tsx","components/Books/BookUpdate.tsx","components/NoMatch/NoMatch.tsx","components/NoMatch/index.ts","components/RootComponent/index.ts","components/RootComponent/RootComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","Navbar","bg","variant","Brand","Nav","className","Link","href","Navigation","styled","div","StoreContext","createContext","actionTypes","addCollection","add","update","delete","appReducers","state","action","type","authors","Object","values","payload","reduce","result","author","id","filter","publishers","publisher","books","book","initialState","Store","children","useReducer","dispatch","memoizedDispatch","useCallback","Provider","value","baseUrl","response","a","status","json","res","Error","message","checkErrors","httpDelete","url","setIsDeleting","fetch","method","then","checkError","finally","actionCreators","authorToAdd","authorToUpdate","authorToDelete","publisherToAdd","publisherToUpdate","publisherToDelete","bookToAdd","bookToUpdate","bookToDelete","BookDelete","useState","error","setError","isDeleting","showDeleteDialog","setShowDeleteDialog","useContext","Button","size","onClick","Alert","dismissible","Modal","show","onHide","Header","closeButton","Title","title","Footer","data","catch","err","Spinner","animation","BookDetails","Card","Body","Subtitle","style","fontSize","isbn","Text","firstName","lastName","name","publishmentYear","ButtonGroup","httpGet","setIsFetching","useAuthors","setAuthors","isFetching","useEffect","usePublishers","setPublishers","useBooks","setBooks","BooksList","isFetchingAuthors","authorsError","isFetchingPublishers","publishersError","isFetchingBooks","booksError","fullDataBooks","map","String","publisherId","authorId","Row","Col","Books","Container","httpPut","body","setIsUpdating","JSON","stringify","headers","AuthorUpdate","setFirstName","setLastName","isUpdating","validated","setValidated","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","Group","controlId","Label","Control","placeholder","onChange","target","required","Feedback","as","role","aria-hidden","AuthorDelete","AuthorDetails","Tabs","defaultActiveKey","Tab","eventKey","AuthorsList","httpPost","setIsCreating","AuthorCreate","isCreating","Authors","PublisherCreate","setName","establishmentYear","setEstablishmentYear","yearOptions","Array","Date","getFullYear","keys","reverse","Number","option","PublisherDelete","PublisherUpdate","PublisherDetails","PublishersList","BookForm","saveBook","isSaving","authorOptions","setAuthorOptions","publisherOptions","setPublisherOptions","setBook","opts","replace","pattern","BookCreate","history","useHistory","push","BookUpdate","useParams","NoMatchContainer","NoMatch","NavLink","RootComponent","exact","path","render","to","Publishers","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0502b31.chunk.js","sourcesContent":["import NavBar from './NavBar';\n\nexport default NavBar;\n","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\n\nexport default function NavBar() {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand>Library</Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"/\">Books</Nav.Link>\n        <Nav.Link href=\"/authors\">Authors</Nav.Link>\n        <Nav.Link href=\"/publishers\">Publishers</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Navigation = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding: 10px 0;\n`;\n","import React, { createContext } from 'react';\nimport AppStore from '../../models/store.model';\n\nexport const StoreContext = createContext(\n  {} as {state: AppStore, dispatch: React.Dispatch<any>},\n);\n","export const actionTypes = {\n  authors: {\n    addCollection: 'ADD_AUTHORS',\n    add: 'ADD_AUTHOR',\n    update: 'UPDATE_AUTHOR',\n    delete: 'DELETE_AUTHOR',\n  },\n  publishers: {\n    addCollection: 'ADD_PUBLISHERS',\n    add: 'ADD_PUBLISHER',\n    update: 'UPDATE_PUBLISHER',\n    delete: 'DELETE_PUBLISHER',\n  },\n  books: {\n    addCollection: 'ADD_BOOKS',\n    add: 'ADD_BOOK',\n    update: 'UPDATE_BOOK',\n    delete: 'DELETE_BOOK',\n  },\n};\n","import AppStore from '../../models/store.model';\nimport Author from '../../models/author.model';\nimport Publisher from '../../models/publisher.model';\nimport Book from '../../models/book.model';\nimport { actionTypes } from './action.types';\n\nexport function appReducers(state: AppStore, action: any): AppStore {\n  switch (action.type) {\n    case (actionTypes.authors.addCollection): {\n      const authors = Object.values(action.payload) as Author[];\n      return { ...state, authors };\n    }\n    case (actionTypes.authors.add):\n      return {\n        ...state,\n        authors: [action.payload, ...state.authors],\n      };\n    case (actionTypes.authors.update):\n      return {\n        ...state,\n        authors: state.authors.reduce((result: Author[], author) => {\n          if (author.id === action.payload.id) {\n            return [...result, action.payload];\n          }\n          return [...result, author];\n        }, []),\n      };\n    case (actionTypes.authors.delete):\n      return {\n        ...state,\n        authors: state\n          .authors\n          .filter((author) => author.id !== action.payload.id),\n      };\n    case (actionTypes.publishers.addCollection): {\n      const publishers = Object.values(action.payload) as Publisher[];\n      return { ...state, publishers };\n    }\n    case (actionTypes.publishers.add):\n      return {\n        ...state,\n        publishers: [action.payload, ...state.publishers],\n      };\n    case (actionTypes.publishers.update):\n      return {\n        ...state,\n        publishers: state\n          .publishers\n          .reduce((result: Publisher[], publisher) => {\n            if (publisher.id === action.payload.id) {\n              return [...result, action.payload];\n            }\n            return [...result, publisher];\n          }, []),\n      };\n    case (actionTypes.publishers.delete):\n      return {\n        ...state,\n        publishers: state\n          .publishers\n          .filter((publisher) => publisher.id !== action.payload.id),\n      };\n    case (actionTypes.books.addCollection): {\n      const books = Object.values(action.payload) as Book[];\n      return { ...state, books };\n    }\n    case (actionTypes.books.add):\n      return {\n        ...state,\n        books: [action.payload, ...state.books],\n      };\n    case (actionTypes.books.update):\n      return {\n        ...state,\n        books: state\n          .books\n          .reduce((result: Book[], book) => {\n            if (book.id === action.payload.id) {\n              return [...result, action.payload];\n            }\n            return [...result, book];\n          }, []),\n      };\n    case (actionTypes.books.delete):\n      return {\n        ...state,\n        books: state\n          .books\n          .filter((book) => book.id !== action.payload.id),\n      };\n    default:\n      return state;\n  }\n}\n","import AppStore from '../../models/store.model';\n\nexport const initialState: AppStore = {\n  authors: [],\n  publishers: [],\n  books: [],\n};\n","import React, { ReactNode, useCallback, useReducer } from 'react';\nimport { StoreContext } from './store.context';\nimport { appReducers } from './reducers';\nimport { initialState } from './initial-state';\n\ntype StoreProps = {\n    children: ReactNode\n}\n\nfunction Store({ children }: StoreProps) {\n  const [state, dispatch] = useReducer(appReducers, initialState);\n\n  const memoizedDispatch = useCallback(\n    (action: any) => {\n      dispatch(action);\n    },\n    [dispatch],\n  );\n\n  return (\n    <StoreContext.Provider value={{ state, dispatch: memoizedDispatch }}>\n      <div>{children}</div>\n    </StoreContext.Provider>\n  );\n}\n\nexport default Store;\n","import Store from './Store';\nimport { StoreContext } from './store.context';\n\nexport default Store;\nexport { StoreContext };\n","const baseUrl = 'http://139.162.147.107:3523';\n\nexport default baseUrl;\n","async function checkErrors(response: any) {\n  if (response.status >= 200 && response.status <= 299) {\n    return response.json();\n  }\n  const res = await response.json();\n  throw Error(res.message);\n}\n\nexport default checkErrors;\n","import React from 'react';\nimport checkError from './check-error';\n\nexport default function httpDelete(\n  url: string,\n  setIsDeleting: React.Dispatch<React.SetStateAction<boolean>>,\n) {\n  setIsDeleting(true);\n\n  return fetch(url, {\n    method: 'DELETE',\n  })\n    .then(checkError)\n    .finally(() => setIsDeleting(false));\n}\n","import Author from '../../models/author.model';\nimport { actionTypes } from './action.types';\nimport Publisher from '../../models/publisher.model';\nimport Book from '../../models/book.model';\n\nexport const actionCreators = {\n  authors: {\n    addCollection: (authors: Author[]) => (\n      { type: actionTypes.authors.addCollection, payload: authors }\n    ),\n    add: (authorToAdd: Author) => (\n      { type: actionTypes.authors.add, payload: authorToAdd }\n    ),\n    update: (authorToUpdate: Author) => (\n      { type: actionTypes.authors.update, payload: authorToUpdate }\n    ),\n    delete: (authorToDelete: Author) => (\n      { type: actionTypes.authors.delete, payload: authorToDelete }\n    ),\n  },\n  publishers: {\n    addCollection: (publishers: Publisher[]) => (\n      { type: actionTypes.publishers.addCollection, payload: publishers }\n    ),\n    add: (publisherToAdd: Publisher) => (\n      { type: actionTypes.publishers.add, payload: publisherToAdd }\n    ),\n    update: (publisherToUpdate: Publisher) => (\n      { type: actionTypes.publishers.update, payload: publisherToUpdate }\n    ),\n    delete: (publisherToDelete: Publisher) => (\n      { type: actionTypes.publishers.delete, payload: publisherToDelete }\n    ),\n  },\n  books: {\n    addCollection: (books: Book[]) => (\n      { type: actionTypes.books.addCollection, payload: books }\n    ),\n    add: (bookToAdd: Book) => (\n      { type: actionTypes.books.add, payload: bookToAdd }\n    ),\n    update: (bookToUpdate: Book) => (\n      { type: actionTypes.books.update, payload: bookToUpdate }\n    ),\n    delete: (bookToDelete: Book) => (\n      { type: actionTypes.books.delete, payload: bookToDelete }\n    ),\n  },\n};\n","import React, { useContext, useState } from 'react';\nimport {\n  Alert, Button, Modal, Spinner,\n} from 'react-bootstrap';\nimport { StoreContext } from '../Store';\nimport baseUrl from '../../http-service/base-url';\nimport httpDelete from '../../http-service/httpDelete';\nimport Book from '../../models/book.model';\nimport { actionCreators } from '../Store/action.creators';\n\ntype BookDeleteProps = {\n  book: Book\n}\n\nfunction BookDelete({ book }: BookDeleteProps) {\n  const [error, setError] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n\n  const { dispatch } = useContext(StoreContext);\n\n  function handleDelete() {\n    setError('');\n\n    const url = `${baseUrl}/books/${book.id}`;\n\n    httpDelete(url, setIsDeleting)\n      .then((data) => dispatch(actionCreators.books.delete(data)))\n      .catch((err) => setError(err.message));\n\n    setShowDeleteDialog(false);\n  }\n\n  return (\n    <div>\n      <Button\n        className=\"ml-3\"\n        variant=\"outline-danger\"\n        size=\"sm\"\n        onClick={() => setShowDeleteDialog(true)}\n      >\n        delete\n      </Button>\n      {error && (\n        <Alert\n          variant=\"danger\"\n          onClick={() => setError('')}\n          dismissible\n        >\n          {error}\n        </Alert>\n      )}\n      <Modal show={showDeleteDialog} onHide={() => setShowDeleteDialog(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Are you sure delete\n            {` ${book.title}` }\n            ?\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setShowDeleteDialog(false)}\n          >\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleDelete}>\n            Delete\n            { isDeleting\n            && <Spinner animation=\"grow\" />}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default BookDelete;\n","import React from 'react';\nimport { Button, ButtonGroup, Card } from 'react-bootstrap';\nimport Book from '../../models/book.model';\nimport BookDelete from './BookDelete';\n\ntype BookDetailsProps = {\n  book: Book;\n}\n\nfunction BookDetails({ book }: BookDetailsProps) {\n  return (\n    <Card className=\"p-3 mb-3\">\n      <Card.Body>\n        <Card.Title>{book.title}</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\" style={{ fontSize: '12px' }}>{book.isbn}</Card.Subtitle>\n        <Card.Text>{`${book.author?.firstName} ${book.author?.lastName}`}</Card.Text>\n        <Card.Text>\n          <span>Published by: </span>\n          {book.publisher?.name}\n          <span> in </span>\n          {book.publishmentYear}\n        </Card.Text>\n        <ButtonGroup size=\"sm\" className=\"mt-4\">\n          <Button variant=\"outline-primary\" size=\"sm\" href={`/books/edit/${book.id}`}>Update</Button>\n          <BookDelete book={book} />\n        </ButtonGroup>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default BookDetails;\n","import React from 'react';\nimport checkError from './check-error';\n\nexport default function httpGet(\n  url: string,\n  setIsFetching: React.Dispatch<React.SetStateAction<boolean>>,\n) {\n  setIsFetching(true);\n  return fetch(url)\n    .then(checkError)\n    .finally(() => setIsFetching(false));\n}\n","import { useEffect, useState } from 'react';\nimport httpGet from '../http-service/httpGet';\nimport baseUrl from '../http-service/base-url';\n\nconst useAuthors = () => {\n  const [authors, setAuthors] = useState({} as any);\n  const [error, setError] = useState('');\n  const [isFetching, setIsFetching] = useState(false);\n\n  const url = `${baseUrl}/authors`;\n\n  useEffect(() => {\n    httpGet(url, setIsFetching)\n      .then((data) => setAuthors(data))\n      .catch((err) => setError(err.message));\n  }, [url]);\n\n  return [authors, isFetching, error];\n};\n\nexport default useAuthors;\n","import { useEffect, useState } from 'react';\nimport httpGet from '../http-service/httpGet';\nimport baseUrl from '../http-service/base-url';\n\nconst usePublishers = () => {\n  const [publishers, setPublishers] = useState({} as any);\n  const [error, setError] = useState('');\n  const [isFetching, setIsFetching] = useState(false);\n\n  const url = `${baseUrl}/publishers`;\n\n  useEffect(() => {\n    httpGet(url, setIsFetching)\n      .then((data) => setPublishers(data))\n      .catch((err) => setError(err.message));\n  }, [url]);\n\n  return [publishers, isFetching, error];\n};\n\nexport default usePublishers;\n","import { useEffect, useState } from 'react';\nimport httpGet from '../http-service/httpGet';\nimport baseUrl from '../http-service/base-url';\n\nconst useBooks = () => {\n  const [books, setBooks] = useState({});\n  const [error, setError] = useState('');\n  const [isFetching, setIsFetching] = useState(false);\n\n  const url = `${baseUrl}/books`;\n\n  useEffect(() => {\n    httpGet(url, setIsFetching)\n      .then((data) => setBooks(data))\n      .catch((err) => setError(err.message));\n  }, [url]);\n\n  return [books, error, isFetching];\n};\n\nexport default useBooks;\n","import React, { useContext, useEffect } from 'react';\nimport {\n  Alert, Col, Row, Spinner,\n} from 'react-bootstrap';\nimport { StoreContext } from '../Store';\nimport Book from '../../models/book.model';\nimport BookDetails from './BookDetails';\nimport useAuthors from '../../hooks/useAuthors';\nimport usePublishers from '../../hooks/usePublishers';\nimport useBooks from '../../hooks/useBooks';\nimport { actionCreators } from '../Store/action.creators';\n\nfunction BooksList() {\n  const { state, dispatch } = useContext(StoreContext);\n\n  const [authors, isFetchingAuthors, authorsError] = useAuthors();\n  const [publishers, isFetchingPublishers, publishersError] = usePublishers();\n  const [books, isFetchingBooks, booksError] = useBooks();\n\n  useEffect(() => {\n    const booksList = Object.values(books) as Book[];\n    const fullDataBooks = booksList.map((book: Book) => {\n      const publisher = publishers[String(book.publisherId)];\n      const author = authors[book.authorId];\n      return { ...book, author, publisher };\n    });\n\n    dispatch(actionCreators.books.addCollection(fullDataBooks));\n\n    return () => dispatch(actionCreators.books.addCollection([]));\n  }, [dispatch, books, publishers, authors]);\n\n  return (\n    <Row>\n      {\n        isFetchingBooks || isFetchingAuthors || isFetchingPublishers\n          ? <Spinner animation=\"grow\" />\n          : (\n            <Col>\n              {state.books.map((book) => (\n                <BookDetails book={book} key={book.id} />\n              ))}\n              {(booksError || authorsError || publishersError)\n              && (\n                <Alert variant=\"danger\">\n                  {booksError}\n                  {authorsError}\n                  {publishersError}\n                </Alert>\n              )}\n            </Col>\n          )\n      }\n    </Row>\n  );\n}\n\nexport default BooksList;\n","import Books from './Books';\n\nexport default Books;\n","import React from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport { Navigation } from '../shared/Navigation';\nimport BooksList from './BooksList';\n\nexport default function Books() {\n  return (\n    <Container>\n      <Navigation>\n        <Button variant=\"outline-success\" href=\"books/create\">Create book</Button>\n      </Navigation>\n      <h1>Books</h1>\n      <BooksList />\n    </Container>\n  );\n}\n","import React from 'react';\nimport checkError from './check-error';\n\nexport default function httpPut(\n  url: string,\n  body: any,\n  setIsUpdating: React.Dispatch<React.SetStateAction<boolean>>,\n) {\n  setIsUpdating(true);\n\n  return fetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(body),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  })\n    .then(checkError)\n    .finally(() => setIsUpdating(false));\n}\n","import React, { FormEvent, useContext, useState } from 'react';\nimport {\n  Alert, Button, Form, Spinner,\n} from 'react-bootstrap';\nimport Author from '../../models/author.model';\nimport httpPut from '../../http-service/httpPut';\nimport { StoreContext } from '../Store';\nimport baseUrl from '../../http-service/base-url';\nimport { actionCreators } from '../Store/action.creators';\n\ntype AuthorUpdateProps = {\n  author: Author\n}\n\nfunction AuthorUpdate({ author }: AuthorUpdateProps) {\n  const [firstName, setFirstName] = useState(author.firstName);\n  const [lastName, setLastName] = useState(author.lastName);\n  const [error, setError] = useState('');\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [validated, setValidated] = useState(false);\n\n  const { dispatch } = useContext(StoreContext);\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    event.stopPropagation();\n    setError('');\n\n    if (!event.currentTarget.checkValidity()) {\n      setValidated(true);\n      return;\n    }\n\n    const url = `${baseUrl}/authors/${author.id}`;\n    const body = { firstName, lastName };\n\n    httpPut(url, body, setIsUpdating)\n      .then((data) => dispatch(actionCreators.authors.update(data)))\n      .catch((err) => setError(err.message))\n      .finally(() => setValidated(false));\n  }\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Group controlId=\"author-first-name\">\n        <Form.Label>First name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Type first name...\"\n          value={firstName}\n          onChange={\n              (event) => setFirstName(event.target.value)\n            }\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide first name.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"author-last-name\">\n        <Form.Label>Last name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Type last name...\"\n          value={lastName}\n          onChange={\n              (event) => setLastName(event.target.value)\n            }\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide last name.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Button type=\"submit\" variant=\"primary\">\n        {\n            isUpdating\n            && (\n              <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n            )\n          }\n        Save\n      </Button>\n      {error\n        && (\n          <Alert\n            variant=\"danger\"\n            onClick={() => setError('')}\n            dismissible\n          >\n            {error}\n          </Alert>\n        )}\n    </Form>\n  );\n}\n\nexport default AuthorUpdate;\n","import React, { useContext, useState } from 'react';\nimport {\n  Alert, Button, Modal, Spinner,\n} from 'react-bootstrap';\nimport httpDelete from '../../http-service/httpDelete';\nimport Author from '../../models/author.model';\nimport { StoreContext } from '../Store';\nimport baseUrl from '../../http-service/base-url';\nimport { actionCreators } from '../Store/action.creators';\n\ntype AuthorDeleteProps = {\n  author: Author\n}\n\nfunction AuthorDelete({ author }: AuthorDeleteProps) {\n  const [error, setError] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n\n  const { dispatch } = useContext(StoreContext);\n\n  function handleDelete() {\n    setError('');\n\n    const url = `${baseUrl}/authors/${author.id}`;\n\n    httpDelete(url, setIsDeleting)\n      .then((data) => dispatch(actionCreators.authors.delete(data)))\n      .catch((err) => setError(err.message));\n\n    setShowDeleteDialog(false);\n  }\n\n  return (\n    <div className=\"mt-4\">\n      <Button\n        variant=\"outline-danger\"\n        size=\"sm\"\n        onClick={() => setShowDeleteDialog(true)}\n      >\n        delete\n      </Button>\n      {error && (\n        <Alert\n          variant=\"danger\"\n          onClick={() => setError('')}\n          dismissible\n        >\n          {error}\n        </Alert>\n      )}\n      <Modal show={showDeleteDialog} onHide={() => setShowDeleteDialog(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Are you sure delete\n            {` ${author.firstName} ${author.lastName}` }\n            ?\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setShowDeleteDialog(false)}\n          >\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleDelete}>\n            Delete\n            { isDeleting\n            && <Spinner animation=\"grow\" />}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default AuthorDelete;\n","import React from 'react';\nimport { Card, Tab, Tabs } from 'react-bootstrap';\nimport Author from '../../models/author.model';\nimport AuthorUpdate from './AuthorUpdate';\nimport AuthorDelete from './AuthorDelete';\n\ntype AuthorDetailProps = {\n  author: Author;\n}\n\nfunction AuthorDetails({ author }: AuthorDetailProps) {\n  return (\n    <Card className=\"p-3 mb-3\">\n      <Card.Body>\n        <Tabs defaultActiveKey=\"details\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"details\" title=\"Details\">\n            <section className=\"mt-4\">\n              <div>{author.firstName}</div>\n              <div>{author.lastName}</div>\n            </section>\n            <AuthorDelete author={author} />\n          </Tab>\n          <Tab eventKey=\"edit\" title=\"Edit\">\n            <section className=\"mt-4\">\n              <AuthorUpdate author={author} />\n            </section>\n          </Tab>\n        </Tabs>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default AuthorDetails;\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  Alert, Col, Row, Spinner,\n} from 'react-bootstrap';\nimport { StoreContext } from '../Store';\nimport AuthorDetails from './AuthorDetails';\nimport httpGet from '../../http-service/httpGet';\nimport baseUrl from '../../http-service/base-url';\nimport { actionCreators } from '../Store/action.creators';\n\nexport default function AuthorsList() {\n  const { state, dispatch } = useContext(StoreContext);\n  const [error, setError] = useState('');\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    const url = `${baseUrl}/authors`;\n\n    httpGet(url, setIsFetching)\n      .then((authors) => dispatch(actionCreators.authors.addCollection(authors)))\n      .catch((err) => setError(err.message));\n\n    return () => dispatch(actionCreators.authors.addCollection([]));\n  }, [dispatch]);\n\n  return (\n    <Row>\n      {\n        isFetching\n          ? <Spinner animation=\"grow\" />\n          : (\n            <Col>\n              {state.authors.map((author) => (\n                <AuthorDetails author={author} key={author.id} />\n              ))}\n              {error\n                ?? (\n                  <Alert variant=\"danger\">{error}</Alert>\n                )}\n            </Col>\n          )\n      }\n    </Row>\n  );\n}\n","import React from 'react';\nimport checkError from './check-error';\n\nexport default function httpPost(\n  url: string,\n  body: any,\n  setIsCreating: React.Dispatch<React.SetStateAction<boolean>>,\n) {\n  setIsCreating(true);\n  return fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  })\n    .then(checkError)\n    .finally(() => setIsCreating(false));\n}\n","import React, { FormEvent, useContext, useState } from 'react';\nimport {\n  Alert, Button, Col, Form, Row, Spinner,\n} from 'react-bootstrap';\nimport { StoreContext } from '../Store';\nimport httpPost from '../../http-service/httpPost';\nimport baseUrl from '../../http-service/base-url';\nimport { actionCreators } from '../Store/action.creators';\n\nfunction AuthorCreate() {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [error, setError] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [validated, setValidated] = useState(false);\n\n  const { dispatch } = useContext(StoreContext);\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setError('');\n\n    if (!event.currentTarget.checkValidity()) {\n      setValidated(true);\n      return;\n    }\n\n    const url = `${baseUrl}/authors`;\n    const body = { firstName, lastName };\n\n    httpPost(url, body, setIsCreating)\n      .then((author) => dispatch(actionCreators.authors.add(author)))\n      .catch((err) => setError(err.message))\n      .finally(() => {\n        setFirstName('');\n        setLastName('');\n        setValidated(false);\n      });\n  };\n\n  return (\n    <Row className=\"my-4\">\n      <Col>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Form.Row className=\"mb-3\">\n            <Col>\n              <Form.Control\n                placeholder=\"Type first name...\"\n                value={firstName}\n                onChange={(event) => setFirstName(event.target.value)}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide first name.\n              </Form.Control.Feedback>\n            </Col>\n            <Col>\n              <Form.Control\n                placeholder=\"Type last name...\"\n                value={lastName}\n                onChange={(event) => setLastName(event.target.value)}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide last name.\n              </Form.Control.Feedback>\n            </Col>\n            <Col>\n              <Button type=\"submit\" variant=\"outline-success\">\n\n                {\n              isCreating\n              && (\n                <Spinner\n                  as=\"span\"\n                  animation=\"grow\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n              )\n            }\n                Create author\n              </Button>\n            </Col>\n          </Form.Row>\n          {error && (\n            <Alert\n              variant=\"danger\"\n              onClick={() => setError('')}\n              dismissible\n            >\n              {error}\n            </Alert>\n          )}\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n\nexport default AuthorCreate;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport AuthorsList from './AuthorsList';\nimport AuthorCreate from './AuthorCreate';\n\nfunction Authors() {\n  return (\n    <Container>\n      <AuthorCreate />\n      <h1>Authors</h1>\n      <AuthorsList />\n    </Container>\n  );\n}\n\nexport default Authors;\n","import React, { FormEvent, useContext, useState } from 'react';\nimport {\n  Alert, Button, Col, Form, Row, Spinner,\n} from 'react-bootstrap';\nimport { StoreContext } from '../Store';\nimport httpPost from '../../http-service/httpPost';\nimport baseUrl from '../../http-service/base-url';\nimport { actionCreators } from '../Store/action.creators';\n\nfunction PublisherCreate() {\n  const { dispatch } = useContext(StoreContext);\n\n  const [name, setName] = useState('');\n  const [establishmentYear, setEstablishmentYear] = useState<number | string>('');\n  const [error, setError] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [validated, setValidated] = useState(false);\n\n  const yearOptions = [...Array(new Date().getFullYear() + 1).keys()].reverse();\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setError('');\n\n    if (!event.currentTarget.checkValidity()) {\n      setValidated(true);\n      return;\n    }\n\n    const url = `${baseUrl}/publishers`;\n    const body = { name, establishmentYear };\n\n    httpPost(url, body, setIsCreating)\n      .then((publisher) => dispatch(actionCreators.publishers.add(publisher)))\n      .catch((err) => setError(err.message))\n      .finally(() => {\n        setName('');\n        setEstablishmentYear('');\n        setValidated(false);\n      });\n  };\n\n  return (\n    <Row className=\"my-4\">\n      <Col>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Form.Row className=\"mb-3\">\n            <Col>\n              <Form.Control\n                placeholder=\"Type name...\"\n                value={name}\n                onChange={(event) => setName(event.target.value)}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide name.\n              </Form.Control.Feedback>\n            </Col>\n            <Col>\n              <Form.Control\n                placeholder=\"Type establishment year...\"\n                as=\"select\"\n                value={establishmentYear}\n                onChange={(event) => setEstablishmentYear(Number(event.target.value))}\n                required\n              >\n                <option value=\"\">Select establishmentYear year...</option>\n                {yearOptions.map((option) => (\n                  <option key={option} value={option}>{option}</option>\n                ))}\n              </Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide year.\n              </Form.Control.Feedback>\n            </Col>\n            <Col>\n              <Button type=\"submit\" variant=\"outline-success\">\n\n                {\n                  isCreating\n                  && (\n                    <Spinner\n                      as=\"span\"\n                      animation=\"grow\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                  )\n                }\n                Create publisher\n              </Button>\n            </Col>\n          </Form.Row>\n          {error && (\n            <Alert\n              variant=\"danger\"\n              onClick={() => setError('')}\n              dismissible\n            >\n              {error}\n            </Alert>\n          )}\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n\nexport default PublisherCreate;\n","import React, { useContext, useState } from 'react';\nimport {\n  Alert, Button, Modal, Spinner,\n} from 'react-bootstrap';\nimport httpDelete from '../../http-service/httpDelete';\nimport { StoreContext } from '../Store';\nimport Publisher from '../../models/publisher.model';\nimport baseUrl from '../../http-service/base-url';\nimport { actionCreators } from '../Store/action.creators';\n\ntype PublisherDeleteProps = {\n  publisher: Publisher\n}\n\nfunction PublisherDelete({ publisher }: PublisherDeleteProps) {\n  const [error, setError] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\n\n  const { dispatch } = useContext(StoreContext);\n\n  function handleDelete() {\n    setError('');\n\n    const url = `${baseUrl}/publishers/${publisher.id}`;\n\n    httpDelete(url, setIsDeleting)\n      .then((data) => dispatch(actionCreators.publishers.delete(data)))\n      .catch((err) => setError(err.message));\n    setShowDeleteDialog(false);\n  }\n\n  return (\n    <div className=\"mt-4\">\n      <Button\n        variant=\"outline-danger\"\n        size=\"sm\"\n        onClick={() => setShowDeleteDialog(true)}\n      >\n        delete\n      </Button>\n      {error && (\n        <Alert\n          variant=\"danger\"\n          onClick={() => setError('')}\n          dismissible\n        >\n          {error}\n        </Alert>\n      )}\n      <Modal show={showDeleteDialog} onHide={() => setShowDeleteDialog(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Are you sure delete\n            {` ${publisher.name}`}\n            ?\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setShowDeleteDialog(false)}\n          >\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleDelete}>\n            Delete\n            { isDeleting\n            && <Spinner animation=\"grow\" />}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default PublisherDelete;\n","import React, { FormEvent, useContext, useState } from 'react';\nimport {\n  Alert, Button, Form, Spinner,\n} from 'react-bootstrap';\nimport httpPut from '../../http-service/httpPut';\nimport { StoreContext } from '../Store';\nimport Publisher from '../../models/publisher.model';\nimport baseUrl from '../../http-service/base-url';\nimport { actionCreators } from '../Store/action.creators';\n\ntype PublisherUpdateProps = {\n  publisher: Publisher\n}\n\nfunction PublisherUpdate({ publisher }: PublisherUpdateProps) {\n  const [name, setName] = useState(publisher.name);\n  const [establishmentYear, setEstablishmentYear] = useState(publisher.establishmentYear);\n  const [error, setError] = useState('');\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [validated, setValidated] = useState(false);\n\n  const { dispatch } = useContext(StoreContext);\n\n  const yearOptions = [...Array(new Date().getFullYear() + 1).keys()].reverse();\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    event.stopPropagation();\n    setError('');\n\n    if (!event.currentTarget.checkValidity()) {\n      setValidated(true);\n      return;\n    }\n\n    const url = `${baseUrl}/publishers/${publisher.id}`;\n    const body = { name, establishmentYear };\n\n    httpPut(url, body, setIsUpdating)\n      .then((data) => dispatch(actionCreators.publishers.update(data)))\n      .catch((err) => setError(err.message))\n      .finally(() => setValidated(false));\n  }\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Group controlId=\"author-first-name\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Type first name...\"\n          value={name}\n          onChange={\n            (event) => setName(event.target.value)\n          }\n          required\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide name.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group controlId=\"establishment-year\">\n        <Form.Label>Establishment year</Form.Label>\n        <Form.Control\n          placeholder=\"Type establishment year...\"\n          as=\"select\"\n          value={establishmentYear}\n          onChange={(event) => setEstablishmentYear(Number(event.target.value))}\n          required\n        >\n          <option value=\"\">Select establishmentYear year...</option>\n          {yearOptions.map((option) => (\n            <option key={option} value={option}>{option}</option>\n          ))}\n        </Form.Control>\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide year.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Button type=\"submit\" variant=\"primary\">\n        {\n          isUpdating\n          && (\n            <Spinner\n              as=\"span\"\n              animation=\"grow\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n          )\n        }\n        Save\n      </Button>\n      {error\n      && (\n        <Alert\n          variant=\"danger\"\n          onClick={() => setError('')}\n          dismissible\n        >\n          {error}\n        </Alert>\n      )}\n    </Form>\n  );\n}\n\nexport default PublisherUpdate;\n","import React from 'react';\nimport { Card, Tab, Tabs } from 'react-bootstrap';\nimport Publisher from '../../models/publisher.model';\nimport PublisherDelete from './PublishersDelete';\nimport PublisherUpdate from './PublishersUpdate';\n\ntype PublisherDetailProps = {\n  publisher: Publisher;\n}\n\nfunction PublisherDetails({ publisher }: PublisherDetailProps) {\n  return (\n    <Card className=\"p-3 mb-3\">\n      <Card.Body>\n        <Tabs defaultActiveKey=\"details\" id=\"uncontrolled-tab-example\">\n          <Tab eventKey=\"details\" title=\"Details\">\n            <section className=\"mt-4\">\n              <div>{publisher.name}</div>\n              <div>{publisher.establishmentYear}</div>\n              <PublisherDelete publisher={publisher} />\n            </section>\n          </Tab>\n          <Tab eventKey=\"edit\" title=\"Edit\">\n            <section className=\"mt-4\">\n              <PublisherUpdate publisher={publisher} />\n            </section>\n          </Tab>\n        </Tabs>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default PublisherDetails;\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  Alert, Col, Row, Spinner,\n} from 'react-bootstrap';\nimport { StoreContext } from '../Store';\nimport httpGet from '../../http-service/httpGet';\nimport PublisherDetails from './PublishersDetails';\nimport baseUrl from '../../http-service/base-url';\nimport { actionCreators } from '../Store/action.creators';\n\nexport default function PublishersList() {\n  const { state, dispatch } = useContext(StoreContext);\n  const [error, setError] = useState('');\n  const [isFetching, setIsFetching] = useState(false);\n\n  useEffect(() => {\n    const url = `${baseUrl}/publishers`;\n\n    httpGet(url, setIsFetching)\n      .then((publishers) => dispatch(actionCreators.publishers.addCollection(publishers)))\n      .catch((err) => setError(err.message));\n\n    return () => dispatch(actionCreators.publishers.addCollection([]));\n  }, [dispatch]);\n\n  return (\n    <Row>\n      {\n        isFetching\n          ? <Spinner animation=\"grow\" />\n          : (\n            <Col>\n              {state.publishers.map((publisher) => (\n                <PublisherDetails publisher={publisher} key={publisher.id} />\n              ))}\n              {error\n              && (\n                <Alert variant=\"danger\">{error}</Alert>\n              )}\n            </Col>\n          )\n      }\n    </Row>\n  );\n}\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport PublisherCreate from './PublishersCreate';\nimport PublishersList from './PublishersList';\n\nfunction Authors() {\n  return (\n    <Container>\n      <PublisherCreate />\n      <h1>Publishers</h1>\n      <PublishersList />\n    </Container>\n  );\n}\n\nexport default Authors;\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport {\n  Alert, Button, Form, Spinner,\n} from 'react-bootstrap';\nimport useAuthors from '../../hooks/useAuthors';\nimport Author from '../../models/author.model';\nimport usePublishers from '../../hooks/usePublishers';\nimport Publisher from '../../models/publisher.model';\nimport Book from '../../models/book.model';\n\ntype BookFormProps = {\n  saveBook: Function,\n  bookToUpdate: Book | null,\n  error: string,\n  isSaving: boolean,\n  setError: React.Dispatch<React.SetStateAction<string>>\n}\n\nfunction BookForm({\n  saveBook, bookToUpdate, error, isSaving, setError,\n}: BookFormProps) {\n  const initialBook = {\n    title: '', isbn: '', authorId: '', publisherId: '', publishmentYear: '',\n  };\n  const [authorOptions, setAuthorOptions] = useState<Author[]>([]);\n  const [publisherOptions, setPublisherOptions] = useState<Publisher[]>([]);\n  const [book, setBook] = useState<Book>(initialBook as Book);\n  const [validated, setValidated] = useState(false);\n  const [authors, isFetchingAuthors] = useAuthors();\n  const [publishers, isFetchingPublishers] = usePublishers();\n  const yearOptions = [...Array(new Date().getFullYear() + 1).keys()].reverse();\n\n  useEffect(() => {\n    if (bookToUpdate) {\n      setBook(bookToUpdate as Book);\n    }\n  }, [bookToUpdate]);\n\n  useEffect(() => {\n    const opts = Object.values(authors) as Author[];\n    setAuthorOptions(opts);\n  }, [authors]);\n\n  useEffect(() => {\n    const opts = Object.values(publishers) as Publisher[];\n    setPublisherOptions(opts);\n  }, [publishers]);\n\n  function handleSubmit(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!event.currentTarget.checkValidity()) {\n      setValidated(true);\n      return;\n    }\n    const isbn = book.isbn.replace(/-/g, '');\n    saveBook({ ...book, isbn });\n    setValidated(false);\n  }\n\n  return (\n    <div>\n      {\n        isFetchingAuthors || isFetchingPublishers\n          ? <Spinner animation=\"grow\" />\n          : (\n            <Form onSubmit={handleSubmit} noValidate validated={validated}>\n              <Form.Group controlId=\"title\">\n                <Form.Label> Book title</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  required\n                  placeholder=\"Type book title...\"\n                  value={book.title}\n                  onChange={(event) => setBook({ ...book, title: event.target.value })}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide title.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"isbn\">\n                <Form.Label> Book isbn</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  required\n                  pattern=\"(^\\d{3}-\\d{1}-\\d{5}-\\d{3}-\\d{1}$)|(^\\d{13}$)\"\n                  placeholder=\"Type book isbn...\"\n                  value={book.isbn}\n                  onChange={(event) => setBook({ ...book, isbn: event.target.value })}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide valid isbn.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"author\">\n                <Form.Label>Book author</Form.Label>\n                <Form.Control\n                  required\n                  as=\"select\"\n                  value={book.authorId}\n                  onChange={(event) => setBook({ ...book, authorId: Number(event.target.value) })}\n                >\n                  <option value=\"\">Select author...</option>\n                  {authorOptions.map((author: Author) => (\n                    <option key={author.id} value={author.id}>{`${author.firstName} ${author.lastName}`}</option>\n                  ))}\n                </Form.Control>\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide author.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"publisher\">\n                <Form.Label>Book publisher</Form.Label>\n                <Form.Control\n                  required\n                  as=\"select\"\n                  value={book.publisherId}\n                  onChange={(event) => setBook({ ...book, publisherId: Number(event.target.value) })}\n                >\n                  <option value=\"\">Select publisher...</option>\n                  {publisherOptions.map((publisher: Publisher) => (\n                    <option key={publisher.id} value={publisher.id}>{publisher.name}</option>\n                  ))}\n                </Form.Control>\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide publisher.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group controlId=\"establishment-year\">\n                <Form.Label>Publishing year</Form.Label>\n                <Form.Control\n                  placeholder=\"Type establishment year...\"\n                  required\n                  as=\"select\"\n                  value={book.publishmentYear}\n                  onChange={(event) => setBook({ ...book, publishmentYear: Number(event.target.value) })}\n                >\n                  <option value=\"\">Select year...</option>\n                  {yearOptions.map((option) => (\n                    <option key={option} value={option}>{option}</option>\n                  ))}\n                </Form.Control>\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide year.\n                </Form.Control.Feedback>\n              </Form.Group>\n              <Button type=\"submit\">\n\n                {\n                  isSaving\n                  && (\n                    <Spinner\n                      as=\"span\"\n                      animation=\"grow\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                  )\n                }\n                Save book\n              </Button>\n              {error && (\n                <Alert\n                  variant=\"danger\"\n                  onClick={() => setError('')}\n                  dismissible\n                >\n                  {error}\n                </Alert>\n              )}\n            </Form>\n          )\n      }\n    </div>\n  );\n}\n\nexport default BookForm;\n","import React, { useContext, useState } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport { useHistory } from 'react-router';\nimport BookForm from './BookForm';\nimport Book from '../../models/book.model';\nimport { StoreContext } from '../Store';\nimport httpPost from '../../http-service/httpPost';\nimport baseUrl from '../../http-service/base-url';\nimport { actionCreators } from '../Store/action.creators';\nimport { Navigation } from '../shared/Navigation';\n\nfunction BookCreate() {\n  const { dispatch } = useContext(StoreContext);\n  const [error, setError] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const history = useHistory();\n\n  const handleCreate = (book: Book) => {\n    setError('');\n\n    const url = `${baseUrl}/books`;\n\n    httpPost(url, book, setIsCreating)\n      .then((author) => {\n        dispatch(actionCreators.books.add(author));\n        history.push('/books');\n      })\n      .catch((err) => setError(err.message));\n  };\n\n  return (\n    <Container>\n      <Navigation>\n        <Button variant=\"outline-secondary\" href=\"/books\">Back</Button>\n      </Navigation>\n      <h1>Create Book</h1>\n      <BookForm saveBook={handleCreate} bookToUpdate={null} error={error} setError={setError} isSaving={isCreating} />\n    </Container>\n  );\n}\n\nexport default BookCreate;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { Button, Container } from 'react-bootstrap';\nimport { StoreContext } from '../Store';\nimport baseUrl from '../../http-service/base-url';\nimport Book from '../../models/book.model';\nimport BookForm from './BookForm';\nimport httpGet from '../../http-service/httpGet';\nimport httpPut from '../../http-service/httpPut';\nimport { actionCreators } from '../Store/action.creators';\nimport { Navigation } from '../shared/Navigation';\n\ntype BookProps = {\n  id: string\n};\n\nfunction BookUpdate() {\n  const [book, setBook] = useState<Book>({} as Book);\n  const [error, setError] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n\n  const { dispatch } = useContext(StoreContext);\n\n  const history = useHistory();\n  const { id } = useParams<BookProps>();\n\n  useEffect(() => {\n    const bookUrl = `${baseUrl}/books/${id}`;\n    httpGet(bookUrl, setIsFetching)\n      .then((data) => setBook(data))\n      .catch((err) => setError(err.message));\n  }, [id]);\n\n  const handleUpdate = (bookToUpdate: Book) => {\n    setError('');\n    const url = `${baseUrl}/books/${book.id}`;\n\n    httpPut(url, bookToUpdate, setIsCreating)\n      .then((author) => {\n        dispatch(actionCreators.books.update(author));\n        history.push('/books');\n      })\n      .catch((err) => setError(err.message));\n  };\n\n  return (\n    <Container>\n      <Navigation>\n        <Button variant=\"outline-secondary\" href=\"/books\">Back</Button>\n      </Navigation>\n      <h1>Update book</h1>\n      {\n        isFetching || (\n          <BookForm\n            saveBook={handleUpdate}\n            bookToUpdate={book}\n            error={error}\n            setError={setError}\n            isSaving={isCreating}\n          />\n        )\n      }\n    </Container>\n  );\n}\n\nexport default BookUpdate;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-bootstrap';\n\nconst NoMatchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nfunction NoMatch() {\n  return (\n    <NoMatchContainer>\n      Oops...\n      <NavLink href=\"/\">back to homepage</NavLink>\n    </NoMatchContainer>\n  );\n}\n\nexport default NoMatch;\n","import NoMatch from './NoMatch';\n\nexport default NoMatch;\n","import RootComponent from './RootComponent';\n\nexport default RootComponent;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport NavBar from '../NavBar';\nimport Books from '../Books';\nimport Authors from '../Authors/Authors';\nimport Publishers from '../Publishers/Publishers';\nimport BookCreate from '../Books/BookCreate';\nimport BookUpdate from '../Books/BookUpdate';\nimport NoMatch from '../NoMatch';\n\nexport default function RootComponent() {\n  return (\n    <>\n      <header>\n        <NavBar />\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/\" render={() => (<Redirect to=\"/books\" />)} />\n          <Route exact path=\"/books\">\n            <Books />\n          </Route>\n          <Route exact path=\"/books/create\">\n            <BookCreate />\n          </Route>\n          <Route exact path=\"/books/edit/:id\">\n            <BookUpdate />\n          </Route>\n          <Route exact path=\"/authors\">\n            <Authors />\n          </Route>\n          <Route exact path=\"/publishers\">\n            <Publishers />\n          </Route>\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n      </main>\n    </>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport RootComponent from './components/RootComponent';\nimport Store from './components/Store';\n\nfunction App() {\n  return (\n    <Router>\n      <Store>\n        <RootComponent />\n      </Store>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}